# vim: set ft=zsh:

## tips
## |& is zsh only version of 2>&1
## unless ... todo

alias grep='grep --color=auto -E'			# egrep Hn=file:lineno
# todo : grey () { find . -type f -name $1 -exec egrep -Hn -e $2 {} + }
# alias grey='grep -Er --include=\*.{h,e}rl "record" .'
greep() {
    # todo: add support of multiple parameters
    case $# in
        1) grep --exclude-dir='.git' --exclude-dir='test' -RHne $1 . ;;
        2) grep --exclude-dir='.git' --exclude-dir='test' $1 -RHne $2 . ;;
    esac
}

port() {
    if [[ $# == 0 ]] then
        print 'Usage: port <int>'
        return
    fi
    case `uname -s` in
        Darwin)
            for port in $@; do
                lsof -n -i4TCP:${port}
            done
            ;;
        Linux)
            # todo
            netstat -ntlp | grep $@ ;;
    esac
}

listen() {
    while true; do
        nc -l 127.0.0.1 $1
    done
}

ww() {
    if [[ $# == 0 ]] then ww * ; fi
    if [[ `uname -s` == 'Darwin' ]] then
        qlmanage -p $@ >& /dev/null
    fi
}

gecho() {
    osascript -e "display notification \"$2\" with title \"$1\""
}

function ret() {
    local ret_code=$?
    echo $ret_code
    return $ret_code
}

function topall() {
    print "not implented yet"
    tpids=`ps ax | grep "$1"`
    print $tpids
}

function list_colors() {
	for color in $(seq 0 255)
	do
		for style in "38;5"
		do
			tag="\033[${style};${color}m"
			str="${style};${color}"
			echo -ne "${tag}${str}${NONE}  "
		done
		echo
	done
}

# todo: move to env conf
function list_shared() {
    zsfs='/usr/local/share/zsh/site-functions'
    if [[ -d $zsfs ]]; then
        for zsf in `ls $zsfs`; do
            echo $zsf
        done
    fi
}

# =======================================
# tail
# =======================================

function test_i () {
    if [[ `uname -s` == 'Darwin' && `/usr/bin/which mvim` != '' ]] then
        p 'osx and mvim is there'
    else
        p '*nix'
    fi
}

function test_e () {
    local _=`which -s mvim`
    if [[ $? == 0 ]] then
        edi='mvim'
    else
        edi='vim'
    fi
}
