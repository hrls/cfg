#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'

# TODO: cd pwd func wrapper
# TODO: sshh module @home, shell, github().pull/clone

def github(repo)
  local = Pathname.new(repo.split('/').last)
  if local.exist? && (local / '.git').exist?
    system("git -C #{local.realpath} pull")
  else
    system("git clone https://github.com/#{repo}")
  end
end

def pdir(base, *subs)
  dir = Pathname.new(base).join(*subs).expand_path
  FileUtils.mkdir_p(dir) unless dir.exist?
  dir
end

# Vim plugins
module Vim
  @pkgs = %(

    hrls/bullfinch
    vim-airline/vim-airline

    junegunn/fzf.vim
    majutsushi/tagbar
    scrooloose/nerdtree
    vim-scripts/restore_view.vim

    tpope/vim-markdown

  ).split

  def install_packages(home = '~')
    home = Pathname.new(home).expand_path unless home.instance_of?(Pathname)

    autoload_dir = pdir(home, '.vim', 'autoload')
    pathogen_abs = autoload_dir / 'pathogen.vim'
    system("curl -LSso #{pathogen_abs} https://tpo.pe/pathogen.vim")

    bundle_dir = pdir(home, '.vim', 'bundle')
    FileUtils.cd(bundle_dir, verbose: true)
    @pkgs.each { |pkg| github pkg }
  end
  module_function :install_packages
end

home = Pathname.new('~/tmp/newhome').expand_path

pdir(home, '.local', 'bin')
pdir(home, '.local', 'var')

# TODO: touch ~/.hushlogin
# TODO: link dotfiles
# TODO: symlinks scripts/* ~/.local/bin

Vim.install_packages(home)
